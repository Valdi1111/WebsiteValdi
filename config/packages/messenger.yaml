framework:
    messenger:
        failure_transport: core_failed

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            core_failed: '%env(MESSENGER_TRANSPORT_DSN)%?queue_name=failed'
            core_async:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                options:
                    queue_name: core_async
                retry_strategy:
                    max_retries: 3
                    multiplier: 2
            anime_episode_download_failed: '%env(MESSENGER_TRANSPORT_DSN)%?queue_name=anime_episode_download_failed'
            anime_episode_download:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                failure_transport: anime_episode_download_failed
                options:
                    queue_name: anime_episode_download
                retry_strategy:
                    max_retries: 3
                    delay: 60000
                    multiplier: 3
            # sync: 'sync://'

        buses:
            command_bus:
                middleware:
                    # each time a message is handled, the Doctrine connection
                    # is "pinged" and reconnected if it's closed. Useful
                    # if your workers run for a long time and the database
                    # connection is sometimes lost
                    - doctrine_ping_connection

                    # After handling, the Doctrine connection is closed,
                    # which can free up database connections in a worker,
                    # instead of keeping them open forever
                    - doctrine_close_connection

                    # logs an error when a Doctrine transaction was opened but not closed
                    #- doctrine_open_transaction_logger

                    # wraps all handlers in a single Doctrine transaction
                    # handlers do not need to call flush() and an error
                    # in any handler will cause a rollback
                    #- doctrine_transaction

                    # or pass a different entity manager to any
                    #- doctrine_transaction: ['custom']

        routing:
            Symfony\Component\Mailer\Messenger\SendEmailMessage: core_async
            Symfony\Component\Notifier\Message\ChatMessage: core_async
            Symfony\Component\Notifier\Message\SmsMessage: core_async

            # Route your messages to the transports
            App\AnimeBundle\Message\EpisodeDownloadNotification: anime_episode_download
            App\AnimeBundle\Message\AnimeCacheRefreshNotification: core_async
            App\AnimeBundle\Message\MangaCacheRefreshNotification: core_async
